/*------------------------------------*\
    #GRID MIXINS
\*------------------------------------*/


// Column lost grid
@mixin column($fraction: '1/1', $cycle: nth(sl-explode($fraction, '/'), 2), $gut: $gutter, $flex: $flexbox) {
  @if ($gut == 0) {
    width: calc(99.999999% * #{$fraction});
  } @else {
    width: calc(99.99% * #{$fraction} - (#{$gut} - #{$gut} * #{$fraction}));
  }
  @if ($flex == false) {
    @if $rtl {
      &:nth-child(n) {
        margin-left: $gut;
        float: right;
        clear: none;
      }
      &:last-child {
        margin-left: 0;
      }
      &:nth-child(#{$cycle}n) {
        margin-left: 0;
        float: left;
      }
      &:nth-child(#{$cycle}n + 1) {
        clear: right;
      }
    } @else {
      &:nth-child(n) {
        margin-right: $gut;
        float: left;
        clear: none;
      }
      &:last-child {
        margin-right: 0;
      }
      &:nth-child(#{$cycle}n) {
        margin-right: 0;
        float: right;
      }
      &:nth-child(#{$cycle}n + 1) {
        clear: left;
      }
    }
  } @else {
    flex: 0 0 auto;
    @if $rtl {
      &:nth-child(n) {
        margin-left: $gut;
      }
      &:last-child {
        margin-left: 0;
      }
      &:nth-child(#{$cycle}n) {
        margin-left: 0;
      }
    } @else {
      &:nth-child(n) {
        margin-right: $gut;
      }
      &:last-child {
        margin-right: 0;
      }
      &:nth-child(#{$cycle}n) {
        margin-right: 0;
      }
    }
  }
}


/// Sass can't split strings natively. Thanks to @HugoGiraudel for https://github.com/at-import/SassyLists
///
/// @access private

@function sl-explode($string, $delimiter: '', $separator: "space") {
  @if type-of($string) != "string" {
    @warn "`sl-explode` function expecting a string; #{type-of($string)} given.";
    @return null;
  }
  @if type-of($delimiter) != "string" {
    @warn "`sl-explode` function expecting a string; #{type-of($delimiter)} given.";
    @return null;
  }
  $result: ();
  $length: str-length($string);
  @if not index("space" "comma", $separator) {
    $separator: "space";
  }
  @if str-length($delimiter) == 0 {
    @for $i from 1 through $length {
      $result: append($result, str-slice($string, $i, $i));
    }
    @return $result;
  }
  $running: true;
  $remaining: $string;
  @while $running {
    $index: str-index($remaining, $delimiter);
    @if not $index {
      $running: false;
    }
    @else {
      $slice: str-slice($remaining, 1, $index - 1);
      $result: append($result, $slice, $separator);
      $remaining: str-slice($remaining, $index + str-length($delimiter));
    }
  }
  @return append($result, $remaining, $separator);
}


/// Sass can't figure out what a number is. Thanks to @HugoGiraudel for http://hugogiraudel.com/2014/01/15/sass-string-to-number
///
/// @access private

@function _length($number, $unit) {
  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';
  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;
  $index: index($strings, $unit);
  @if not $index {
    @warn "Unknown unit `#{$unit}`.";
    @return false;
  }
  @return $number * nth($units, $index);
}


/// @access private

@function number($string) {
  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';
  $numbers:  0   1   2   3   4   5   6   7   8   9;
  $result: 0;
  $divider: 0;
  $minus: false;
  @for $i from 1 through str-length($string) {
    $character: str-slice($string, $i, $i);
    $index: index($strings, $character);
    @if $character == '-' {
      $minus: true;
    }
    @else if $character == '.' {
      $divider: 1;
    }
    @else {
      @if not $index {
        $result: if($minus, $result * -1, $result);
        @return _length($result, str-slice($string, $i));
      }
      $number: nth($numbers, $index);
      @if $divider == 0 {
        $result: $result * 10;
      }
      @else {
        $divider: $divider * 10;
        $number: $number / $divider;
      }
      $result: $result + $number;
    }
  }
  @return if($minus, $result * -1, $result);
}

